version: '3'

services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - "${configVolume}/plex:/config"
      - "${mediaVolume}/tv:/data/tv"
      - "${mediaVolume}/movies:/data/movies"
      - "${plexTranscode}:/transcode"
    network_mode: host
    environment:
      - PLEX_CLAIM=claim-x9VGt9pFZGUmn9KqAysu
      - ADVERTISE_IP=http://${serverip}:32400/
      - HOTNAME=antman
      - "/etc/localtime:/etc/localtime:ro"
      - PLEX_UID=${UID}
      - PLEX_GUID=${GUID}
    labels:
      - "traefik.backend=plex"
      - "traefik.frontend.rule=Host:plex.${domainName}"
    restart: unless-stopped

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
      - "${configVolume}/sabnzbd:/config"
      - '${downloadVolume}/complete:/downloads'
      - '${downloadVolume}/incomplete:/incomplete-downloads'
    ports:
      - 8081:8080
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - PUID:${UID}
      - PGID:${GUID}
    labels:
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:sabnzbd.${domainName}"
    networks:
      - web
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - "${configVolume}/radarr:/config"
      - "${downloadVolume}/complete:/downloads"
      - "${mediaVolume}/movies:/movies"
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - PUID:${UID}
      - PGID:${GUID}
    labels:
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${domainName}"
    networks:
      - web
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - sabnzbd
      - plex
    volumes:
      - "${configVolume}/sonarr:/config"
      - "${downloadVolume}/complete:/downloads"
      - "${mediaVolume}/tv:/tv"
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - PUID:${UID}
      - PGID:${GUID}
    labels:
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${domainName}"
    networks:
      - web
    restart: unless-stopped

  nzbhydra:
    image: linuxserver/hydra
    container_name: nzbhydra
    volumes:
      - "${configVolume}/nzbhydra:/config"
      - "${downloadVolume}:/downloads"
    environment:
      - "/etc/localtime:/etc/localtime:ro"
      - PUID:${UID}
      - PGID:${GUID}
    labels:
      - "traefik.backend=nzbhydra"
      - "traefik.frontend.rule=Host:hydra.${domainName}"
    networks:
      - web
    restart: unless-stopped

networks:
    web:
      external:
        name: traefik_webgateway
